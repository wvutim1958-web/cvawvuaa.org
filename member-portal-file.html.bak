<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Member Portal ‚Ä¢ CVCWVUAA - File Protocol Compatible</title>
  <style>
    /* Complete embedded CSS for file:// protocol compatibility */
    body {
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
      line-height: 1.6;
      color: #333;
      background: #f8f9fa;
      margin: 0;
      padding: 0;
    }
    
    .wrapper {
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
    }
    
    .site {
      background: #003366;
      color: white;
      padding: 15px 0;
    }
    
    .topbar {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    
    .brand {
      display: flex;
      align-items: center;
      text-decoration: none;
      color: white;
      font-weight: bold;
      font-size: 18px;
    }
    
    .site-logo {
      height: 40px;
      margin-right: 10px;
    }
    
    .nav {
      display: flex;
      gap: 20px;
      align-items: center;
    }
    
    .nav a {
      color: white;
      text-decoration: none;
      padding: 8px 16px;
      border-radius: 4px;
      transition: background-color 0.2s;
    }
    
    .nav a:hover {
      background: rgba(255, 255, 255, 0.1);
    }
    
    .nav-toggle {
      display: none;
      background: none;
      border: none;
      color: white;
      font-size: 20px;
      cursor: pointer;
    }
    
    .btn {
      display: inline-block;
      padding: 12px 24px;
      background: #007bff;
      color: white;
      border: none;
      border-radius: 6px;
      text-decoration: none;
      cursor: pointer;
      font-size: 16px;
      transition: background-color 0.2s;
    }
    
    .btn:hover {
      background: #0056b3;
    }
    
    .btn.outline {
      background: transparent;
      color: #007bff;
      border: 2px solid #007bff;
    }
    
    .btn.outline:hover {
      background: #007bff;
      color: white;
    }
    
    .card {
      background: white;
      padding: 30px;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      margin-bottom: 20px;
    }
    
    .lead {
      font-size: 20px;
      color: #666;
      margin-bottom: 20px;
    }
    
    h1, h2, h3 {
      color: #003366;
    }
    
    .member-dashboard {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 20px;
      margin: 20px 0;
    }
    
    .benefit-card {
      background: linear-gradient(135deg, #f8f9fa, #e9ecef);
      border: 1px solid #dee2e6;
      border-radius: 12px;
      padding: 20px;
      text-align: center;
      transition: transform 0.2s ease;
    }
    
    .benefit-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }
    
    .login-section {
      max-width: 400px;
      margin: 0 auto;
      text-align: center;
    }
    
    .site-footer {
      background: #003366;
      color: white;
      text-align: center;
      padding: 30px 0;
      margin-top: 50px;
    }
    
    .footer-bar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 10px;
    }
    
    .footer-bar a {
      color: white;
      text-decoration: none;
    }
    
    .footer-meta {
      font-size: 14px;
      color: #ccc;
    }
    
    .status {
      padding: 15px;
      margin: 15px 0;
      border-radius: 5px;
      font-weight: bold;
    }
    
    .status.success { background: #d4edda; color: #155724; }
    .status.error { background: #f8d7da; color: #721c24; }
    .status.info { background: #d1ecf1; color: #0c5460; }
    
    /* Animations for notifications */
    @keyframes slideInRight {
      from { transform: translateX(100%); opacity: 0; }
      to { transform: translateX(0); opacity: 1; }
    }
    
    @keyframes slideOutRight {
      from { transform: translateX(0); opacity: 1; }
      to { transform: translateX(100%); opacity: 0; }
    }
    
    /* Mobile responsive */
    @media (max-width: 768px) {
      .nav {
        display: none;
      }
      
      .nav-toggle {
        display: block;
      }
      
      .topbar {
        flex-direction: column;
        gap: 15px;
      }
      
      .wrapper {
        padding: 15px;
      }
    }
  </style>
</head>
<body>

<header class="site">
  <div class="wrapper topbar">
    <div class="brand">
      üéì CVCWVUAA Member Portal
    </div>
    <nav class="nav">
      <a href="#home">Home</a>
      <a href="#about">About</a>
      <a href="#events">Events</a>
      <a href="#contact">Contact</a>
    </nav>
    <button class="nav-toggle">‚ò∞</button>
  </div>
</header>

<main>
  <div class="wrapper">
    <h2>üîê Member Portal</h2>
    <p class="lead">All member benefits included - just $25/year for complete access!</p>
    
    <div style="background: #e8f5e8; border: 1px solid #4caf50; border-radius: 6px; padding: 12px; margin: 16px 0; text-align: center;">
      <p style="margin: 0; color: #2e7d32; font-weight: 600;">‚úÖ Simplified Membership: One low price, all benefits included - no premium tiers!</p>
    </div>

    <!-- Status Display -->
    <div id="portal-status" class="status info">
      üîÑ Initializing member portal...
    </div>

    <!-- Login Section -->
    <div id="login-section" class="login-section">
      <div class="card">
        <h3>Member Login Required</h3>
        <p>Access your member benefits, exclusive content, and connect with fellow Mountaineers.</p>
        
        <div style="margin: 20px 0;">
          <button class="btn" onclick="showLogin()">üîê Login</button>
          <button class="btn outline" onclick="showRegistration()">üìù Register</button>
        </div>
        
        <div style="margin-top: 20px; padding: 16px; background: #f8f9fa; border-radius: 6px; font-size: 14px;">
          <strong>‚ú® Demo Accounts - File Protocol Compatible:</strong><br>
          All members get the same benefits! Try these accounts:<br><br>
          <strong>Account 1:</strong> <code>member@cvawvuaa.org</code> / <code>member123</code><br>
          <strong>Account 2:</strong> <code>john.doe@email.com</code> / <code>password123</code><br><br>
          
          <button onclick="testBasicJS()" class="btn" style="font-size: 12px; padding: 6px 12px;">‚úÖ Test JS</button>
          <button onclick="showDebugInfo()" class="btn outline" style="font-size: 12px; padding: 6px 12px;">üîß Debug</button>
        </div>
      </div>
    </div>

    <!-- Member Dashboard (shown when logged in) -->
    <div id="member-section" style="display: none;">
      <div class="card">
        <div id="member-welcome">
          <!-- Populated by JavaScript when logged in -->
        </div>
      </div>
      
      <div class="member-dashboard">
        <div class="benefit-card">
          <h3>üé´ Event Access</h3>
          <p>Priority RSVP access to all chapter events and activities.</p>
          <div style="margin: 16px 0;">
            <button class="btn">View Events</button>
          </div>
        </div>

        <div class="benefit-card">
          <h3>üìß Newsletter Access</h3>
          <p>Full access to newsletter archives and exclusive member communications.</p>
          <div style="margin: 16px 0;">
            <button class="btn">Newsletter Archive</button>
          </div>
        </div>

        <div class="benefit-card">
          <h3>üë• Member Directory</h3>
          <p>Connect with fellow alumni through our searchable member directory.</p>
          <div style="margin: 16px 0;">
            <button class="btn">Browse Directory</button>
          </div>
        </div>

        <div class="benefit-card">
          <h3>üíé Member Resources</h3>
          <p>Access member content, insider updates, and exclusive alumni resources.</p>
          <div style="margin: 16px 0;">
            <button class="btn">View Resources</button>
          </div>
        </div>
      </div>
    </div>

    <!-- Debug Information -->
    <div id="debug-section" style="display: none;">
      <div class="card">
        <h3>üîß Debug Information</h3>
        <div id="debug-content" style="font-family: monospace; background: #f8f9fa; padding: 15px; border-radius: 5px; white-space: pre-wrap;"></div>
      </div>
    </div>

  </div>
</main>

<footer class="site-footer">
  <div class="wrapper">
    <div class="footer-bar">
      <div>CVCWVUAA ‚Äî Central Virginia Chapter</div>
      <a href="#contact">Contact Us</a>
    </div>
    <div class="footer-meta">¬© 2025 CVCWVUAA. This page is designed for file:// protocol compatibility.</div>
  </div>
</footer>

<script>
// Complete Member Portal System - File Protocol Compatible
console.log('üöÄ Initializing file-protocol-compatible member portal...');

// Main member portal object
window.memberPortal = {
  initialized: false,
  currentUser: null,
  
  // Demo members (embedded, no external files needed)
  members: {
    'member@cvawvuaa.org': {
      email: 'member@cvawvuaa.org',
      name: 'Demo Member',
      password: 'member123',
      memberType: 'member',
      joinDate: '2023-06-15'
    },
    'john.doe@email.com': {
      email: 'john.doe@email.com', 
      name: 'John Doe',
      password: 'password123',
      memberType: 'member',
      joinDate: '2022-01-10'
    }
  },
  
  // Initialize
  init: function() {
    this.initialized = true;
    this.updateStatus('‚úÖ Member portal initialized successfully! (File protocol compatible)', 'success');
    console.log('‚úÖ Member portal ready for file:// protocol');
    return this;
  },
  
  // Update status display
  updateStatus: function(message, type = 'info') {
    const statusEl = document.getElementById('portal-status');
    if (statusEl) {
      statusEl.textContent = message;
      statusEl.className = 'status ' + type;
    }
    console.log(`[${type.toUpperCase()}] ${message}`);
  },
  
  // Show login modal
  showLoginModal: function() {
    console.log('üìã Opening login modal...');
    
    // Remove existing modal
    const existing = document.getElementById('login-modal');
    if (existing) existing.remove();
    
    // Create modal
    const modal = document.createElement('div');
    modal.id = 'login-modal';
    modal.style.cssText = `
      position: fixed; top: 0; left: 0; right: 0; bottom: 0;
      background: rgba(0,0,0,0.5); z-index: 1000;
      display: flex; align-items: center; justify-content: center;
    `;
    
    modal.innerHTML = `
      <div style="
        background: white; padding: 30px; border-radius: 10px;
        width: 90%; max-width: 400px; box-shadow: 0 4px 20px rgba(0,0,0,0.3);
      ">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
          <h3 style="margin: 0;">üîê Member Login</h3>
          <button onclick="closeLoginModal()" style="
            background: none; border: none; font-size: 24px; cursor: pointer;
            color: #999; width: 30px; height: 30px; border-radius: 50%;
          " onmouseover="this.style.background='#f0f0f0'" onmouseout="this.style.background='none'">√ó</button>
        </div>
        
        <form onsubmit="handleLogin(event)">
          <div style="margin-bottom: 15px;">
            <label style="display: block; margin-bottom: 5px; font-weight: bold;">Email:</label>
            <input type="email" id="login-email" required style="
              width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 4px;
              box-sizing: border-box; font-size: 16px;
            " placeholder="member@cvawvuaa.org" autocomplete="email">
          </div>
          
          <div style="margin-bottom: 20px;">
            <label style="display: block; margin-bottom: 5px; font-weight: bold;">Password:</label>
            <input type="password" id="login-password" required style="
              width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 4px;
              box-sizing: border-box; font-size: 16px;
            " placeholder="member123" autocomplete="current-password">
          </div>
          
          <div style="display: flex; gap: 10px; justify-content: flex-end; margin-bottom: 15px;">
            <button type="button" onclick="closeLoginModal()" style="
              padding: 10px 20px; background: #6c757d; color: white; border: none;
              border-radius: 4px; cursor: pointer; font-size: 16px;
            ">Cancel</button>
            <button type="submit" style="
              padding: 10px 20px; background: #007bff; color: white; border: none;
              border-radius: 4px; cursor: pointer; font-size: 16px;
            ">Login</button>
          </div>
        </form>
        
        <div style="border-top: 1px solid #eee; padding-top: 15px; font-size: 14px;">
          <p style="margin: 0 0 10px 0; font-weight: bold;">Demo Accounts:</p>
          <div style="background: #f8f9fa; padding: 10px; border-radius: 4px; font-family: monospace;">
            member@cvawvuaa.org / member123<br>
            john.doe@email.com / password123
          </div>
        </div>
      </div>
    `;
    
    document.body.appendChild(modal);
    
    // Close on outside click
    modal.addEventListener('click', function(e) {
      if (e.target === modal) closeLoginModal();
    });
    
    // Focus email field
    setTimeout(() => {
      const emailField = document.getElementById('login-email');
      if (emailField) emailField.focus();
    }, 100);
  },
  
  // Handle login
  login: function(email, password) {
    const member = this.members[email];
    if (member && member.password === password) {
      this.currentUser = member;
      this.updateStatus(`‚úÖ Welcome back, ${member.name}!`, 'success');
      this.updateUI();
      this.showNotification(`‚úÖ Login successful! Welcome ${member.name}`, 'success');
      return true;
    } else {
      this.updateStatus('‚ùå Invalid credentials. Try the demo accounts!', 'error');
      this.showNotification('‚ùå Invalid email or password', 'error');
      return false;
    }
  },
  
  // Logout
  logout: function() {
    const userName = this.currentUser ? this.currentUser.name : 'User';
    this.currentUser = null;
    this.updateStatus('üëã Logged out successfully', 'info');
    this.updateUI();
    this.showNotification(`üëã Goodbye, ${userName}!`, 'info');
  },
  
  // Update UI based on login status
  updateUI: function() {
    const loginSection = document.getElementById('login-section');
    const memberSection = document.getElementById('member-section');
    const memberWelcome = document.getElementById('member-welcome');
    
    if (this.currentUser) {
      // Show member content
      if (loginSection) loginSection.style.display = 'none';
      if (memberSection) memberSection.style.display = 'block';
      
      // Update welcome section
      if (memberWelcome) {
        memberWelcome.innerHTML = `
          <div style="background: linear-gradient(135deg, #e3f2fd, #bbdefb); padding: 20px; border-radius: 8px;">
            <h4 style="margin: 0 0 10px 0;">üë§ Welcome, ${this.currentUser.name}!</h4>
            <p style="margin: 0 0 15px 0; color: #1976d2;">
              Email: ${this.currentUser.email}<br>
              Member since: ${this.currentUser.joinDate}<br>
              Status: ‚úÖ Active Member
            </p>
            <button onclick="window.memberPortal.logout()" class="btn" style="background: #dc3545;">
              üö™ Logout
            </button>
          </div>
        `;
      }
    } else {
      // Show login form
      if (loginSection) loginSection.style.display = 'block';
      if (memberSection) memberSection.style.display = 'none';
    }
  },
  
  // Show notification
  showNotification: function(message, type = 'info') {
    // Remove existing notifications
    const existing = document.querySelectorAll('.notification');
    existing.forEach(n => n.remove());
    
    const colors = {
      success: '#28a745',
      error: '#dc3545',
      info: '#007bff'
    };
    
    const notification = document.createElement('div');
    notification.className = 'notification';
    notification.style.cssText = `
      position: fixed; top: 20px; right: 20px; z-index: 1001;
      padding: 15px 20px; border-radius: 5px; color: white; font-weight: bold;
      background: ${colors[type] || colors.info}; box-shadow: 0 4px 12px rgba(0,0,0,0.3);
      animation: slideInRight 0.3s ease; max-width: 300px;
    `;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    // Auto-remove after 4 seconds
    setTimeout(() => {
      if (notification.parentNode) {
        notification.style.animation = 'slideOutRight 0.3s ease';
        setTimeout(() => notification.remove(), 300);
      }
    }, 4000);
  },
  
  // Show registration info
  showRegistrationModal: function() {
    this.showNotification('üìù Registration coming soon! Use demo accounts for now.', 'info');
  },
  
  // Get debug info
  getDebugInfo: function() {
    return {
      initialized: this.initialized,
      currentUser: this.currentUser ? this.currentUser.name : 'None',
      protocol: window.location.protocol,
      pathname: window.location.pathname,
      memberCount: Object.keys(this.members).length,
      userAgent: navigator.userAgent.split(' ')[0],
      jsSupport: 'Full',
      domReady: document.readyState,
      timestamp: new Date().toISOString()
    };
  }
};

// Global helper functions
function showLogin() {
  window.memberPortal.showLoginModal();
}

function showRegistration() {
  window.memberPortal.showRegistrationModal();
}

function handleLogin(event) {
  event.preventDefault();
  const email = document.getElementById('login-email').value;
  const password = document.getElementById('login-password').value;
  
  if (window.memberPortal.login(email, password)) {
    closeLoginModal();
  }
}

function closeLoginModal() {
  const modal = document.getElementById('login-modal');
  if (modal) modal.remove();
}

function testBasicJS() {
  alert('‚úÖ JavaScript is working perfectly!\n\n' +
        'File Protocol: ' + window.location.protocol + '\n' +
        'Portal Ready: ' + window.memberPortal.initialized + '\n' +
        'Functions Available: ' + (typeof showLogin) + '\n\n' +
        'You can now safely test the login system!');
}

function showDebugInfo() {
  const debugSection = document.getElementById('debug-section');
  const debugContent = document.getElementById('debug-content');
  
  if (debugSection && debugContent) {
    const info = window.memberPortal.getDebugInfo();
    
    debugContent.textContent = `
üîß MEMBER PORTAL DEBUG INFO

Portal Status:
  ‚úÖ Initialized: ${info.initialized}
  üë§ Current User: ${info.currentUser}
  üîê Demo Members: ${info.memberCount}

System Info:
  üåê Protocol: ${info.protocol}
  üìÅ Path: ${info.pathname}
  üñ•Ô∏è  Browser: ${info.userAgent}
  üìÑ DOM State: ${info.domReady}
  ‚ö° JS Support: ${info.jsSupport}

Functions Available:
  - showLogin(): ${typeof showLogin}
  - showRegistration(): ${typeof showRegistration}
  - handleLogin(): ${typeof handleLogin}
  - testBasicJS(): ${typeof testBasicJS}

Timestamp: ${info.timestamp}

‚úÖ Everything looks good for file:// protocol!
    `;
    
    debugSection.style.display = debugSection.style.display === 'none' ? 'block' : 'none';
  }
}

// Initialize when DOM is ready
function initializeMemberPortal() {
  console.log('üéØ Initializing member portal...');
  window.memberPortal.init();
  window.memberPortal.updateUI();
}

// Multiple initialization methods for maximum compatibility
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', initializeMemberPortal);
} else {
  initializeMemberPortal();
}

// Backup initialization
setTimeout(function() {
  if (!window.memberPortal.initialized) {
    console.log('üîÑ Backup initialization...');
    initializeMemberPortal();
  }
}, 500);

console.log('üèÅ Member portal script loaded successfully for file:// protocol');
</script>

</body>
</html>