console.log("Theme toggle script loading...");class ThemeManager{constructor(){console.log("ThemeManager constructor called"),this.currentTheme="light",this.init()}init(){console.log("ThemeManager init called");const e=localStorage.getItem("cvcwvuaa-theme"),t=window.matchMedia("(prefers-color-scheme: dark)").matches;this.currentTheme=e||(t?"dark":"light"),console.log("Initial theme:",this.currentTheme),this.applyTheme(this.currentTheme),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",e=>{localStorage.getItem("cvcwvuaa-theme")||this.setTheme(e.matches?"dark":"light")})}applyTheme(e){console.log("Applying theme:",e),document.documentElement.setAttribute("data-theme",e),this.currentTheme=e,this.updateToggleButtons()}setTheme(e){console.log("Setting theme to",e),this.applyTheme(e),console.log("Document data-theme attribute:",document.documentElement.getAttribute("data-theme")),localStorage.setItem("cvcwvuaa-theme",e)}toggle(){const e=document.documentElement.getAttribute("data-theme")||"light",t="light"===e?"dark":"light";console.log("Toggling theme from",e,"to",t),this.setTheme(t)}updateToggleButtons(){document.querySelectorAll(".theme-toggle").forEach(e=>{const t=e.querySelector(".theme-icon"),o=e.querySelector(".theme-text");"dark"===this.currentTheme?(t&&(t.textContent="☀️"),o&&(o.textContent="Light"),e.setAttribute("aria-label","Switch to light theme")):(t&&(t.textContent="🌙"),o&&(o.textContent="Dark"),e.setAttribute("aria-label","Switch to dark theme"))})}createToggleButton(){const e=document.createElement("button");return e.className="theme-toggle",e.innerHTML='\n      <span class="theme-icon">🌙</span>\n      <span class="theme-text">Dark</span>\n    ',e.addEventListener("click",()=>this.toggle()),this.updateToggleButtons(),e}autoInjectToggle(){console.log("autoInjectToggle called");const e=document.querySelectorAll(".theme-toggle");if(console.log("Found existing theme toggle buttons:",e.length),e.length>0)return void e.forEach((e,t)=>{console.log(`Button ${t}:`,e,"Already bound?",e.dataset.bound),e.dataset.bound||(e.addEventListener("click",e=>{e.preventDefault(),console.log("Theme toggle button clicked!"),this.toggle()}),e.dataset.bound="true",console.log(`Bound click handler to button ${t}`))});const t=document.querySelector(".nav");if(t){console.log("Creating new toggle button in nav");const e=this.createToggleButton();t.appendChild(e)}this.updateToggleButtons()}}document.addEventListener("DOMContentLoaded",()=>{console.log("Theme toggle DOMContentLoaded fired");const e=new ThemeManager;console.log("Theme manager created:",e),e.autoInjectToggle(),window.themeManager=e,console.log("Theme toggle initialization complete")});